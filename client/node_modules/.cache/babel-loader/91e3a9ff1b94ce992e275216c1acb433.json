{"ast":null,"code":"var _jsxFileName = \"/Users/meg/Desktop/final-project-musically-challenged-masters/client/src/instruments/KingFasa.tsx\";\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Monosynth = new Tone.MonoSynth().toDestination();\nexport function OcarinaKey({\n  note,\n  synth,\n  hole1,\n  hole2,\n  hole3,\n  hole4,\n  hole5,\n  hole6,\n  hole7,\n  index\n}) {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      onMouseDown: () => Monosynth === null || Monosynth === void 0 ? void 0 : Monosynth.triggerAttack(`${note}`) // Question: what is `onMouseDown`?\n      ,\n      onMouseUp: () => Monosynth === null || Monosynth === void 0 ? void 0 : Monosynth.triggerRelease('+0.25') // Question: what is `onMouseUp`?\n      ,\n      className: classNames('ba pointer absolute dim', {\n        'black bg-navy h1 ': hole1,\n        'black bg-navy hx1 m': hole2,\n        'black bg-navy hx1 mx2': hole3,\n        'black bg-navy hx1 mx3': hole4,\n        'black bg-navy hx1 mx4': hole5,\n        'black bg-navy hx1 mx5': hole6,\n        'black bg-navy hx1 mx6': hole7\n      }),\n      style: {\n        // CSS\n        top: hole1 ? 205 : hole2 ? 170 : hole3 ? 163 : hole4 ? 204 : hole5 ? 115 : hole6 ? 138 : hole7 ? 115 : 0,\n        left: hole1 ? '3rem' : hole2 ? '5.5rem' : hole3 ? '9.3rem' : hole4 ? '7.2rem' : hole5 ? '14.2rem' : hole6 ? '17rem' : hole7 ? '19.75rem' : 0,\n        height: hole1 ? '1.8rem' : hole2 ? '2.2rem' : hole3 ? '2rem' : hole4 ? '2rem' : hole5 ? '2rem' : hole6 ? '1.6rem' : hole7 ? '1.5rem' : 0,\n        zIndex: 0,\n        width: hole1 ? '1.8rem' : hole2 ? '2.2rem' : hole3 ? '2rem' : hole4 ? '2rem' : hole5 ? '2rem' : hole6 ? '1.6rem' : hole7 ? '1.5rem' : 0,\n        marginLeft: hole1 ? 0 : hole2 ? 0 : hole3 ? 0 : hole4 ? 0 : hole5 ? 0 : hole6 ? 0 : hole7 ? 0 : -50,\n        borderRadius: 50\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  );\n} // // eslint-disable-next-line\n// function PianoKeyWithoutJSX({\n//   note,\n//   synth,\n//   minor,\n//   index,\n// }: OcarinaKeyProps): JSX.Element {\n//   /**\n//    * This React component for pedagogical purposes.\n//    * See `PianoKey` for the React component with JSX (JavaScript XML).\n//    */\n//   return React.createElement(\n//     'div',\n//     {\n//       onMouseDown: () => synth?.triggerAttack(`${note}`),\n//       onMouseUp: () => synth?.triggerRelease('+0.25'),\n//       className: classNames('ba pointer absolute dim', {\n//         'bg-black black h3': minor,\n//         'black bg-white h4': !minor,\n//       }),\n//       style: {\n//         top: 0,\n//         left: `${index * 2}rem`,\n//         zIndex: minor ? 1 : 0,\n//         width: minor ? '1.5rem' : '2rem',\n//         marginLeft: minor ? '0.25rem' : 0,\n//       },\n//     },\n//     [],\n//   );\n// }\n\n_c = OcarinaKey;\n\nfunction OcarinaType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n      'b--black black': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = OcarinaType;\n\nfunction Ocarina({\n  synth,\n  setSynth\n}) {\n  const keys = List([{\n    note: 'C',\n    idx: 0\n  }, {\n    note: 'Db',\n    idx: 0.5\n  }, {\n    note: 'D',\n    idx: 1\n  }, {\n    note: 'Eb',\n    idx: 1.5\n  }, {\n    note: 'E',\n    idx: 2\n  }, {\n    note: 'F',\n    idx: 3\n  }, {\n    note: 'Gb',\n    idx: 3.5\n  }, {\n    note: 'G',\n    idx: 4\n  }, {\n    note: 'Ab',\n    idx: 4.5\n  }, {\n    note: 'A',\n    idx: 5\n  }, {\n    note: 'Bb',\n    idx: 5.5\n  }, {\n    note: 'B',\n    idx: 6\n  }]);\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List(['sine', 'sawtooth', 'square', 'triangle', 'fmsine', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsawtooth', 'amtriangle']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib h4 w-100 ml4\",\n      children: [Range(2, 7).map(octave => keys.map(key => {\n        const note = `${key.note}${octave}`;\n        const isHole1 = key.note === 'C';\n        const isHole2 = key.note === 'D';\n        const isHole3 = key.note === 'E';\n        const isHole4 = key.note === 'F';\n        const isHole5 = key.note === 'G';\n        const isHole6 = key.note === 'A';\n        const isHole7 = key.note === 'B';\n        return /*#__PURE__*/_jsxDEV(OcarinaKey, {\n          //react key\n          note: note,\n          synth: synth,\n          hole1: isHole1,\n          hole2: isHole2,\n          hole3: isHole3,\n          hole4: isHole4,\n          hole5: isHole5,\n          hole6: isHole6,\n          hole7: isHole7,\n          octave: octave,\n          index: key.idx\n        }, note, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this);\n      })), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://assets.dragoart.com/images/17570_501/how-to-draw-an-ocarina_5e4cbf22b38804.68476613_83525_5_3.png\",\n        alt: \"Pan\",\n        style: {\n          margin: \"10px\",\n          width: \"400px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(OcarinaType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Ocarina;\nexport const OcarinaInstrument = new Instrument('Ocarina', Ocarina);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OcarinaKey\");\n$RefreshReg$(_c2, \"OcarinaType\");\n$RefreshReg$(_c3, \"Ocarina\");","map":{"version":3,"sources":["/Users/meg/Desktop/final-project-musically-challenged-masters/client/src/instruments/KingFasa.tsx"],"names":["Tone","classNames","List","Range","React","Instrument","Monosynth","MonoSynth","toDestination","OcarinaKey","note","synth","hole1","hole2","hole3","hole4","hole5","hole6","hole7","index","triggerAttack","triggerRelease","top","left","height","zIndex","width","marginLeft","borderRadius","OcarinaType","title","onClick","active","Ocarina","setSynth","keys","idx","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","oscillators","map","octave","key","isHole1","isHole2","isHole3","isHole4","isHole5","isHole6","isHole7","margin","o","OcarinaInstrument"],"mappings":"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","sourcesContent":["\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface OcarinaKeyProps {\n  note: string; // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n  duration?: string;\n  synth?: Tone.Synth; // Contains library code for making sound\n  \n  hole1?: boolean;\n  hole2?: boolean;\n  hole3?: boolean;\n  hole4?: boolean;\n  hole5?: boolean;\n  hole6?: boolean;\n  hole7?: boolean;\n  \n  \n  //minor?: boolean; // True if minor key, false if major key\n  octave: number;\n  index: number; // octave + index together give a location for the piano key\n}\nconst Monosynth = new Tone.MonoSynth().toDestination();\n\nexport function OcarinaKey({\n  note,\n  synth,\n  \n  hole1,\n  hole2,\n  hole3,\n  hole4,\n  hole5,\n  hole6,\n  hole7,\n\n  index,\n}: OcarinaKeyProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    <div\n      onMouseDown={() => Monosynth?.triggerAttack(`${note}`)} // Question: what is `onMouseDown`?\n      onMouseUp={() => Monosynth?.triggerRelease('+0.25')} // Question: what is `onMouseUp`?\n      className={classNames('ba pointer absolute dim', {\n        'black bg-navy h1 ': hole1, \n        'black bg-navy hx1 m': hole2,\n        'black bg-navy hx1 mx2': hole3,\n        'black bg-navy hx1 mx3': hole4,\n        'black bg-navy hx1 mx4': hole5,\n        'black bg-navy hx1 mx5': hole6,\n        'black bg-navy hx1 mx6': hole7,\n      })}\n      style={{\n        // CSS\n        top:\n            hole1? 205: \n            hole2? 170:\n            hole3? 163:\n            hole4? 204:\n            hole5? 115:\n            hole6? 138:\n            hole7? 115: 0,\n        left:\n            hole1? '3rem': \n            hole2? '5.5rem':\n            hole3? '9.3rem':\n            hole4? '7.2rem':\n            hole5? '14.2rem':\n            hole6? '17rem':\n            hole7? '19.75rem': 0,\n        height:\n            hole1? '1.8rem': \n            hole2? '2.2rem':\n            hole3? '2rem':\n            hole4? '2rem':\n            hole5? '2rem':\n            hole6? '1.6rem':\n            hole7? '1.5rem': 0,\n        zIndex:  0,\n        width:\n            hole1? '1.8rem': \n            hole2? '2.2rem':\n            hole3? '2rem':\n            hole4? '2rem':\n            hole5? '2rem':\n            hole6? '1.6rem':\n            hole7? '1.5rem': 0,\n        marginLeft:\n            hole1? 0: \n            hole2? 0:\n            hole3? 0:\n            hole4? 0:\n            hole5? 0:\n            hole6? 0:\n            hole7? 0: -50,\n        borderRadius: 50,\n      }}\n    ></div>\n  );\n}\n\n// // eslint-disable-next-line\n// function PianoKeyWithoutJSX({\n//   note,\n//   synth,\n//   minor,\n//   index,\n// }: OcarinaKeyProps): JSX.Element {\n//   /**\n//    * This React component for pedagogical purposes.\n//    * See `PianoKey` for the React component with JSX (JavaScript XML).\n//    */\n//   return React.createElement(\n//     'div',\n//     {\n//       onMouseDown: () => synth?.triggerAttack(`${note}`),\n//       onMouseUp: () => synth?.triggerRelease('+0.25'),\n//       className: classNames('ba pointer absolute dim', {\n//         'bg-black black h3': minor,\n//         'black bg-white h4': !minor,\n//       }),\n//       style: {\n//         top: 0,\n//         left: `${index * 2}rem`,\n//         zIndex: minor ? 1 : 0,\n//         width: minor ? '1.5rem' : '2rem',\n//         marginLeft: minor ? '0.25rem' : 0,\n//       },\n//     },\n//     [],\n//   );\n// }\n\n\n\n\nfunction OcarinaType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}\n\nfunction Ocarina({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: 'C', idx: 0 },\n    { note: 'Db', idx: 0.5 },\n    { note: 'D', idx: 1 },\n    { note: 'Eb', idx: 1.5 },\n    { note: 'E', idx: 2 },\n    { note: 'F', idx: 3 },\n    { note: 'Gb', idx: 3.5 },\n    { note: 'G', idx: 4 },\n    { note: 'Ab', idx: 4.5 },\n    { note: 'A', idx: 5 },\n    { note: 'Bb', idx: 5.5 },\n    { note: 'B', idx: 6 },\n  ]);\n\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;\n\n\n\n  return (\n    <div className=\"pv4\">\n      <div className=\"relative dib h4 w-100 ml4\">\n        {Range(2, 7).map(octave =>\n          keys.map(key => {\n            \n            const note = `${key.note}${octave}`;\n            const isHole1 = key.note === 'C';\n            const isHole2 = key.note === 'D';\n            const isHole3= key.note === 'E';\n            const isHole4= key.note === 'F';\n            const isHole5= key.note === 'G';\n            const isHole6= key.note === 'A';\n            const isHole7= key.note === 'B';\n            return (\n              <OcarinaKey\n                key={note} //react key\n                note={note}\n                synth={synth}\n                hole1={isHole1}\n                hole2={isHole2}\n                hole3={isHole3}\n                hole4={isHole4}\n                hole5={isHole5}\n                hole6={isHole6}\n                hole7={isHole7}\n\n                octave={octave}\n                index={ key.idx}\n              />\n            );\n          }),\n        )}\n        <img\n     src=\"https://assets.dragoart.com/images/17570_501/how-to-draw-an-ocarina_5e4cbf22b38804.68476613_83525_5_3.png\"\n     alt=\"Pan\"\n     style={{\n       margin: \"10px\",\n       width: \"400px\",\n  \n     }}\n   />\n      </div>\n      <div className={'pl4 pt4 flex'}>\n        {oscillators.map(o => (\n          <OcarinaType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const OcarinaInstrument = new Instrument('Ocarina', Ocarina);\n"]},"metadata":{},"sourceType":"module"}