{"ast":null,"code":"var _jsxFileName = \"/Users/meg/Desktop/final-project-musically-challenged-masters/client/src/instruments/MargaretDLT.tsx\";\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function XylophoneKey({\n  note,\n  synth,\n  key1,\n  key2,\n  key3,\n  key4,\n  key5,\n  key6,\n  key7,\n  key8,\n  notC,\n  index\n}) {\n  /**\n   * This React component corresponds to either a major or minor key in the Xylophone.\n   * See `XylophoneKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttack(`${note}`) // Question: what is `onMouseDown`?\n      ,\n      onMouseUp: () => synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.25') // Question: what is `onMouseUp`\n      ,\n      className: classNames('ba pointer absolute dim', {\n        'black bg-red hx8': key1,\n        'black bg-orange hx7 mx1': key2,\n        'black bg-yellow hx6 mx2': key3,\n        'black bg-green hx5 mx3': key4,\n        'black bg-blue hx4 mx4': key5,\n        'black bg-purple hx3 mx5': key6,\n        'black bg-gray hx2 mx6': key7,\n        'black bg-black hx1 mx7': key8,\n        'white': notC\n      }),\n      style: {\n        // CSS\n        top: 0,\n        left: `${index * 2.3}rem`,\n        zIndex: 0,\n        width: '2rem',\n        marginLeft: 100\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  );\n} // eslint-disable-next-line\n\n_c = XylophoneKey;\n\nfunction XylophoneKeyWithoutJSX({\n  note,\n  synth,\n  key1,\n  key2,\n  key3,\n  key4,\n  key5,\n  key6,\n  key7,\n  key8,\n  index\n}) {\n  /**\n   * This React component for pedagogical purposes.\n   * See `XylophoneKey` for the React component with JSX (JavaScript XML).\n   */\n  return /*#__PURE__*/React.createElement('div', {\n    onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttack(`${note}`),\n    onMouseUp: () => synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.25'),\n    className: classNames('ba pointer absolute dim', {\n      'bg-black black hx8': key1,\n      'black bg-red hx7': key2,\n      'black bg-red hx6': key3,\n      'black bg-red hx5': key4,\n      'black bg-red hx4': key5,\n      'black bg-red hx3': key6,\n      'black bg-red hx2': key7,\n      'black bg-red hx1': key8\n    }),\n    style: {\n      top: 0,\n      left: `${index * 2}rem`,\n      zIndex: 0,\n      width: '2rem',\n      marginLeft: 0\n    }\n  }, []);\n}\n\n_c2 = XylophoneKeyWithoutJSX;\n\nfunction XylophoneType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n      'b--black black': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = XylophoneType;\n\nfunction Xylophone({\n  synth,\n  setSynth\n}) {\n  const keyHighC = List([{\n    note: 'C',\n    idx: 0\n  }]);\n  const keys = List([{\n    note: 'C',\n    idx: 0\n  }, {\n    note: 'D',\n    idx: 1\n  }, {\n    note: 'E',\n    idx: 2\n  }, {\n    note: 'F',\n    idx: 3\n  }, {\n    note: 'G',\n    idx: 4\n  }, {\n    note: 'A',\n    idx: 5\n  }, {\n    note: 'B',\n    idx: 6\n  }]);\n\n  const handleKeyPress = event => {\n    if (event.key === 's') {\n      synth === null || synth === void 0 ? void 0 : synth.triggerAttack('C');\n    }\n\n    if (event.key === 'd') {\n      synth === null || synth === void 0 ? void 0 : synth.triggerAttack('D');\n    }\n\n    if (event.key === 'f') {\n      synth === null || synth === void 0 ? void 0 : synth.triggerAttack('E');\n    }\n\n    if (event.key === 'g') {\n      synth === null || synth === void 0 ? void 0 : synth.triggerAttack('F');\n    }\n\n    if (event.key === 'h') {\n      synth === null || synth === void 0 ? void 0 : synth.triggerAttack('G');\n    }\n\n    if (event.key === 'j') {\n      synth === null || synth === void 0 ? void 0 : synth.triggerAttack('A');\n    }\n\n    if (event.key === 'k') {\n      synth === null || synth === void 0 ? void 0 : synth.triggerAttack('B');\n    }\n\n    if (event.key === 'l') {\n      synth === null || synth === void 0 ? void 0 : synth.triggerAttack('C4');\n    }\n  };\n\n  const handleKeyStop = () => {\n    synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.25');\n  };\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List(['sine']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      tabIndex: 0,\n      onKeyDown: handleKeyPress,\n      onKeyUp: handleKeyStop,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative dib h4 w-100 ml4\",\n        children: Range(3, 4).map(octave => keys.map(key => {\n          const note = `${key.note}${octave}`;\n          const isKey1 = key.note === 'C';\n          const isKey2 = key.note === 'D';\n          const isKey3 = key.note === 'E';\n          const isKey4 = key.note === 'F';\n          const isKey5 = key.note === 'G';\n          const isKey6 = key.note === 'A';\n          const isKey7 = key.note === 'B';\n          return /*#__PURE__*/_jsxDEV(XylophoneKey, {\n            //react key\n            note: note,\n            synth: synth,\n            octave: octave,\n            key1: isKey1,\n            key2: isKey2,\n            key3: isKey3,\n            key4: isKey4,\n            key5: isKey5,\n            key6: isKey6,\n            key7: isKey7,\n            index: (octave - 2) * 2 + key.idx\n          }, note, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dib h1 w-100 ml4\",\n        children: Range(4, 5).map(octave => keyHighC.map(key => {\n          const note = `${key.note}${octave}`;\n          const isKey8 = key.note === 'C';\n          return /*#__PURE__*/_jsxDEV(XylophoneKey, {\n            //react key\n            note: note,\n            synth: synth,\n            octave: octave,\n            key8: isKey8,\n            index: octave + 5.85\n          }, note, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'pl4 pt4 flex',\n        children: oscillators.map(o => /*#__PURE__*/_jsxDEV(XylophoneType, {\n          title: o,\n          onClick: () => setOscillator(o),\n          active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n        }, o, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Xylophone;\nexport const XylophoneInstrument = new Instrument('MargaretDLT', Xylophone);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"XylophoneKey\");\n$RefreshReg$(_c2, \"XylophoneKeyWithoutJSX\");\n$RefreshReg$(_c3, \"XylophoneType\");\n$RefreshReg$(_c4, \"Xylophone\");","map":{"version":3,"sources":["/Users/meg/Desktop/final-project-musically-challenged-masters/client/src/instruments/MargaretDLT.tsx"],"names":["Tone","classNames","List","Range","React","Instrument","XylophoneKey","note","synth","key1","key2","key3","key4","key5","key6","key7","key8","notC","index","triggerAttack","triggerRelease","top","left","zIndex","width","marginLeft","XylophoneKeyWithoutJSX","createElement","onMouseDown","onMouseUp","className","style","XylophoneType","title","onClick","active","Xylophone","setSynth","keyHighC","idx","keys","handleKeyPress","event","key","handleKeyStop","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","toDestination","oscillators","map","octave","isKey1","isKey2","isKey3","isKey4","isKey5","isKey6","isKey7","isKey8","o","XylophoneInstrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React, { useEffect } from 'react';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\nimport { appendFileSync } from 'fs';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Xylophone.\n ** ------------------------------------------------------------------------ */\n\n interface XylophoneKeyProps {\n  note: string; // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n  duration?: string;\n  synth?: Tone.Synth; // Contains library code for making sound\n  key1?: boolean;\n  key2?: boolean;\n  key3?: boolean;\n  key4?: boolean;\n  key5?: boolean;\n  key6?: boolean;\n  key7?: boolean;\n  key8?: boolean;\n  notC?: boolean;\n  octave: number;\n  index: number; // octave + index together give a location for the Xylophone key\n}\n\nexport function XylophoneKey({\n  note,\n  synth,\n  key1,\n  key2,\n  key3,\n  key4,\n  key5,\n  key6,\n  key7,\n  key8,\n  notC,\n  index,\n}: XylophoneKeyProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the Xylophone.\n   * See `XylophoneKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n      // Observations:\n      // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n      // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n      // 3. The curly braces `{` and `}` should remind you of string interpolation.\n      <div\n        onMouseDown={() => synth?.triggerAttack(`${note}`)} // Question: what is `onMouseDown`?\n        onMouseUp={() => synth?.triggerRelease('+0.25')} // Question: what is `onMouseUp`\n        className={classNames('ba pointer absolute dim', {\n          'black bg-red hx8': key1,\n          'black bg-orange hx7 mx1': key2,\n          'black bg-yellow hx6 mx2': key3,\n          'black bg-green hx5 mx3': key4,\n          'black bg-blue hx4 mx4': key5,\n          'black bg-purple hx3 mx5': key6,\n          'black bg-gray hx2 mx6': key7,\n          'black bg-black hx1 mx7': key8,\n          'white': notC,\n        })}\n        style={{\n          // CSS\n          top: 0,\n          left: `${index * 2.3}rem`,\n          zIndex: 0,\n          width: '2rem',\n          marginLeft: 100,\n        }}\n      ></div>\n  );\n}\n\n// eslint-disable-next-line\nfunction XylophoneKeyWithoutJSX({\n  note,\n  synth,\n  key1,\n  key2,\n  key3,\n  key4,\n  key5,\n  key6,\n  key7,\n  key8,\n  index,\n}: XylophoneKeyProps): JSX.Element {\n  /**\n   * This React component for pedagogical purposes.\n   * See `XylophoneKey` for the React component with JSX (JavaScript XML).\n   */\n  return React.createElement(\n    'div',\n    {\n      onMouseDown: () => synth?.triggerAttack(`${note}`),\n      onMouseUp: () => synth?.triggerRelease('+0.25'),\n      className: classNames('ba pointer absolute dim', {\n        'bg-black black hx8': key1, \n        'black bg-red hx7': key2,\n        'black bg-red hx6': key3,\n        'black bg-red hx5': key4,\n        'black bg-red hx4': key5,\n        'black bg-red hx3': key6,\n        'black bg-red hx2': key7,\n        'black bg-red hx1': key8,\n      }),\n      style: {\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: 0,\n        width: '2rem',\n        marginLeft: 0,\n      },\n    },\n    [],\n  );\n}\n\nfunction XylophoneType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}\n\nfunction Xylophone({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const keyHighC = List([\n    { note: 'C', idx: 0 },\n  ]);\n  const keys = List([\n    { note: 'C', idx: 0 },\n    { note: 'D', idx: 1 },\n    { note: 'E', idx: 2 },\n    { note: 'F', idx: 3 },\n    { note: 'G', idx: 4 },\n    { note: 'A', idx: 5 },\n    { note: 'B', idx: 6 },\n  ]);\n\n  const handleKeyPress = (event: { key: string; }) => {\n    if(event.key === 's'){\n      synth?.triggerAttack('C')\n    }\n    if(event.key === 'd'){\n      synth?.triggerAttack('D')\n    }\n    if(event.key === 'f'){\n      synth?.triggerAttack('E')\n    }\n    if(event.key === 'g'){\n      synth?.triggerAttack('F')\n    }\n    if(event.key === 'h'){\n      synth?.triggerAttack('G')\n    }\n    if(event.key === 'j'){\n      synth?.triggerAttack('A')\n    }\n    if(event.key === 'k'){\n      synth?.triggerAttack('B')\n    }\n    if(event.key === 'l'){\n      synth?.triggerAttack('C4')\n    }\n  }\n  const handleKeyStop = () => {\n    synth?.triggerRelease('+0.25')\n  }\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n  ]) as List<OscillatorType>;\n  return (\n    <div className=\"pv4\"> \n     <div tabIndex={0} onKeyDown={handleKeyPress} onKeyUp={handleKeyStop}>\n      <div className=\"relative dib h4 w-100 ml4\"> \n        {Range(3,4).map(octave =>\n          keys.map(key => { \n            const note = `${key.note}${octave}`;\n            const isKey1 = key.note === 'C';\n            const isKey2 = key.note === 'D';\n            const isKey3 = key.note === 'E';\n            const isKey4 = key.note === 'F';\n            const isKey5 = key.note === 'G';\n            const isKey6 = key.note === 'A';\n            const isKey7 = key.note === 'B';\n            return (\n              <XylophoneKey\n                key={note} //react key\n                note={note}\n                synth={synth}\n                octave={octave}\n                key1={isKey1}\n                key2={isKey2}\n                key3={isKey3}\n                key4={isKey4}\n                key5={isKey5}\n                key6={isKey6}\n                key7={isKey7}\n                index={(octave - 2) * 2 + key.idx} \n        />\n            );\n          }),\n        )}\n      </div>\n      <div className=\"dib h1 w-100 ml4\"> \n                {Range(4,5).map(octave =>\n                  keyHighC.map(key => { \n                  const note = `${key.note}${octave}`;\n                  const isKey8 = key.note === 'C';\n                  return (\n                    <XylophoneKey\n                      key={note} //react key\n                      note={note}\n                      synth={synth}\n                      octave={octave}\n                      key8={isKey8}\n                      index={(octave) + 5.85} \n          />\n          );\n          }),\n        )}\n      </div>\n      <div className={'pl4 pt4 flex'}>\n        {oscillators.map(o => (\n          <XylophoneType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n    </div>\n  );\n}\nexport const XylophoneInstrument = new Instrument('MargaretDLT', Xylophone);\n \n"]},"metadata":{},"sourceType":"module"}