{"ast":null,"code":"// 3rd party\nimport { List, Map } from 'immutable'; // project dependencies\n\nimport { PianoInstrument } from './instruments/Piano';\nimport { WaveformVisualizer } from './visualizers/Waveform';\nimport { XylophoneInstrument } from './instruments/MargaretDLT';\nimport { WaveformVisualizer2 } from './visualizers/MargaretDLT';\n/** ------------------------------------------------------------------------ **\n * The entire application state is stored in AppState.\n ** ------------------------------------------------------------------------ */\n\n// similar to { [id: string]: any }\n\n/**\n * Start with the default piano instrument.\n * Add your instruments to this list.\n */\nconst instruments = List([PianoInstrument, XylophoneInstrument]); // similar to Instrument[]\n\n/**\n * Start with the default waveform visualizer.\n * Add your visualizers to this list.\n */\n\nconst visualizers = List([WaveformVisualizer, WaveformVisualizer2]); // similar to Visualizer[]\n\n/**\n * The default application state contains a list of instruments and a list of visualizers.\n *\n * 'instrument': List<Instrument>\n * 'visualizer': List<Visualizer>\n */\n//  const drumSounds = List([\n//   {type: 'clap1' , sound: './sound/clap-1.wav'},\n//   {type: 'clap2' , sound: './sound/clap-1.wav'},\n//   {type: 'cymbal' , sound: './sound/cymbal.wav'},\n//   {type:'hihat1' , sound: './sound/hihat-close.wav'},\n//   {type:'hihat2' , sound: './sound/hihat-closed.wav'},\n//   {type:'hihat3' , sound: './sound/hihat-open-1.wav'},\n//   {type:'hihat4' , sound: './sound/hihat-open-2.wav'},\n//   {type:'kick1' , sound: './sound/kick-short.wav'},\n//   {type:'kick2' , sound: './sound/kick.wav'},\n//   {type:'ride' , sound: './sound/ride.wav'},\n//   {type:'rim' , sound: './sound/rim.wav'},\n//   {type:'snare' , sound: './sound/snare.wav'},\n//   {type:'tom1' , sound: './sound/tom-h.wav'},\n//   {type:'tom2' , sound: './sound/tom-l.wav'}\n//  ]);\n\nexport const defaultState = Map({\n  'instruments': instruments,\n  'visualizers': visualizers //'drumSounds': drumSounds, \n\n});","map":{"version":3,"sources":["/Users/meg/Desktop/final-project-musically-challenged-masters/client/src/State.tsx"],"names":["List","Map","PianoInstrument","WaveformVisualizer","XylophoneInstrument","WaveformVisualizer2","instruments","visualizers","defaultState"],"mappings":"AAAA;AACA,SAASA,IAAT,EAAeC,GAAf,QAA0B,WAA1B,C,CAEA;;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,mBAAT,QAAoC,2BAApC;AAEA;AACA;AACA;;AACmD;;AAEnD;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGN,IAAI,CAAC,CAACE,eAAD,EAAkBE,mBAAlB,CAAD,CAAxB,C,CAAwE;;AAExE;AACA;AACA;AACA;;AACA,MAAMG,WAAW,GAAGP,IAAI,CAAC,CAACG,kBAAD,EAAqBE,mBAArB,CAAD,CAAxB,C,CAAwE;;AAGxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,YAAsB,GAAGP,GAAG,CAAc;AACrD,iBAAeK,WADsC;AAErD,iBAAeC,WAFsC,CAGrD;;AAHqD,CAAd,CAAlC","sourcesContent":["// 3rd party\nimport { List, Map } from 'immutable';\n\n// project dependencies\nimport { PianoInstrument } from './instruments/Piano';\nimport { WaveformVisualizer } from './visualizers/Waveform';\nimport { XylophoneInstrument } from './instruments/MargaretDLT';\nimport { WaveformVisualizer2 } from './visualizers/MargaretDLT';\n\n/** ------------------------------------------------------------------------ **\n * The entire application state is stored in AppState.\n ** ------------------------------------------------------------------------ */\nexport type AppState = Map<string, any>;           // similar to { [id: string]: any }\n\n/**\n * Start with the default piano instrument.\n * Add your instruments to this list.\n */\nconst instruments = List([PianoInstrument, XylophoneInstrument]);       // similar to Instrument[]\n\n/**\n * Start with the default waveform visualizer.\n * Add your visualizers to this list.\n */\nconst visualizers = List([WaveformVisualizer, WaveformVisualizer2]);    // similar to Visualizer[]\n\n\n/**\n * The default application state contains a list of instruments and a list of visualizers.\n *\n * 'instrument': List<Instrument>\n * 'visualizer': List<Visualizer>\n */\n//  const drumSounds = List([\n//   {type: 'clap1' , sound: './sound/clap-1.wav'},\n//   {type: 'clap2' , sound: './sound/clap-1.wav'},\n//   {type: 'cymbal' , sound: './sound/cymbal.wav'},\n//   {type:'hihat1' , sound: './sound/hihat-close.wav'},\n//   {type:'hihat2' , sound: './sound/hihat-closed.wav'},\n//   {type:'hihat3' , sound: './sound/hihat-open-1.wav'},\n//   {type:'hihat4' , sound: './sound/hihat-open-2.wav'},\n//   {type:'kick1' , sound: './sound/kick-short.wav'},\n//   {type:'kick2' , sound: './sound/kick.wav'},\n//   {type:'ride' , sound: './sound/ride.wav'},\n//   {type:'rim' , sound: './sound/rim.wav'},\n//   {type:'snare' , sound: './sound/snare.wav'},\n//   {type:'tom1' , sound: './sound/tom-h.wav'},\n//   {type:'tom2' , sound: './sound/tom-l.wav'}\n//  ]);\n\nexport const defaultState: AppState = Map<string, any>({\n  'instruments': instruments,\n  'visualizers': visualizers,\n  //'drumSounds': drumSounds, \n});\n"]},"metadata":{},"sourceType":"module"}